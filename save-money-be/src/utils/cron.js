const cron = require('node-cron');
const { scrapeBrouchuresLidl, scrapeBrouchuresKaufland, archiveExpiredBrochures, scrapeBrouchuresBilla } = require('../services/brochureService');

// –§–∞–ª—à–∏–≤–∏ req –∏ res –æ–±–µ–∫—Ç–∏
const fakeReq = {};
const fakeRes = {
    json: (data) => console.log('‚úÖ –£—Å–ø–µ—Ö:', data),
    status: (code) => ({
        json: (err) => console.error(`‚ùå –ì—Ä–µ—à–∫–∞ (${code}):`, err),
    }),
};

// Billa: —Å—Ä—è–¥–∞ –≤ 9:00
cron.schedule('0 9 * * 3', async () => {
    console.log('üïò –°—Ç–∞—Ä—Ç–∏—Ä–∞ Billa —Å–∫—Ä–µ–π–ø');
    await scrapeBrouchuresBilla(fakeReq, fakeRes);
});

// Lidl: —á–µ—Ç–≤—ä—Ä—Ç—ä–∫ –≤ 9:00
cron.schedule('0 9 * * 4', async () => {
    console.log('üïò –°—Ç–∞—Ä—Ç–∏—Ä–∞ Lidl —Å–∫—Ä–µ–π–ø');
    await scrapeBrouchuresLidl(fakeReq, fakeRes);
});

// Kaufland: –ø–µ—Ç—ä–∫ –≤ 9:00
cron.schedule('0 9 * * 5', async () => {
    console.log('üïò –°—Ç–∞—Ä—Ç–∏—Ä–∞ Kaufland —Å–∫—Ä–µ–π–ø');
    await scrapeBrouchuresKaufland(fakeReq, fakeRes);
});

//For testing
cron.schedule('37 14 * * *', async () => {
    console.log('üïò –°—Ç–∞—Ä—Ç–∏—Ä–∞ Kaufland —Å–∫—Ä–µ–π–ø');
    await scrapeBrouchuresKaufland(fakeReq, fakeRes);
}, {
    timezone: 'Europe/Sofia'
});

cron.schedule('0 9 * * *', async () => {
    console.log('‚è∞ –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∞—Ä—Ö–∏–≤–∏—Ä–∞–Ω–µ –Ω–∞ –∏–∑—Ç–µ–∫–ª–∏ –±—Ä–æ—à—É—Ä–∏:', new Date().toLocaleString());
    try {
        await archiveExpiredBrochures(fakeReq, fakeRes);
    } catch (err) {
        console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ –Ω–∞ –∞—Ä—Ö–∏–≤–∞:', err);
    }
}, {
    timezone: 'Europe/Sofia'
});